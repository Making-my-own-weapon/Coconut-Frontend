upstream backend {
    server ${BACKEND_HOST}:${BACKEND_PORT};
}

server {
    listen 80;
    server_name localhost;
    
    # 모든 API 요청을 /api/v1/ prefix를 추가하여 백엔드로 프록시
    # 정규식 ^/(auth|room|db)/를 사용해서 이 세 가지 경로 패턴에 대해서만 /api/v1 prefix를 추가하고, $uri 변수를 사용해서 원본 경로를 그대로 유지
    location ~ ^/(auth|room|db)/ {
        proxy_pass http://backend/api/v1$uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 이미 /api/로 시작하는 요청은 그대로 전달
    location /api/ {
        proxy_pass http://backend$uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # websocket의 초기 http handshake를 백엔드로 전달
    location /socket.io/ {
    proxy_pass http://backend$uri;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;        # WebSocket 업그레이드
    proxy_set_header Connection "upgrade";         # 연결 업그레이드
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
    
    # 프론트엔드 정적 파일
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # SPA를 위한 설정
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # 정적 자산 캐싱 (JS, CSS, 이미지 등)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 헬스체크 엔드포인트
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}