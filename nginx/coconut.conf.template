upstream backend {
    server ${BACKEND_HOST}:${BACKEND_PORT};
}

server {
    listen 80;
    server_name juicecoconut.com;
    
    # api 요청은 /api/v1/*로 백엔드에 전달
    location ^~ /api/v1/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # 그 외 모든 요청은 React SPA가 처리
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # SPA를 위한 설정
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # websocket의 초기 http handshake를 백엔드로 전달
    location /socket.io/ {
        proxy_pass http://backend$request_uri;         # 쿼리 스트링까지 포함해서 백엔드에 요청
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;        # WebSocket 업그레이드
        proxy_set_header Connection "upgrade";         # 연결 업그레이드
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 600s;                       # 백엔드로부터 응답이 없을 때 클라이언트와의 연결을 유지할 최대 시간
        proxy_send_timeout 600s;                       # 클라이언트로부터 데이터가 오지 않을 때 연결을 유지할 시간
    }
    
    # 정적 자산 캐싱 (JS, CSS, 이미지 등)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 헬스체크 엔드포인트
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}